name: AKS Deploy and Delete

on:
  workflow_dispatch:
    inputs:
      action:
        description: 'Select the action to perform'
        required: true
        default: 'Deploy-Azure-AKS'
        type: choice
        options:
          - Deploy-Azure-AKS
          - Delete-Azure-AKS
          - Both

jobs:
  Deploy-Azure-AKS:
    if: ${{ github.event.inputs.action == 'Deploy-Azure-AKS' || github.event.inputs.action == 'Both' }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Login to Azure
        uses: azure/login@v1
        with:
          creds: '{"clientId": "${{ secrets.AZURE_CLIENT_ID }}", "clientSecret": "${{ secrets.AZURE_CLIENT_SECRET }}", "subscriptionId": "${{ secrets.AZURE_SUBSCRIPTION_ID }}", "tenantId": "${{ secrets.AZURE_TENANT_ID }}"}'
      
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Log in to Azure Container Registry
        run: az acr login --name ${{ secrets.ACR_NAME }}

      - name: Build Docker image
        id: docker_build
        run: |
          docker build -t ${{ secrets.ACR_NAME }}.azurecr.io/${{ secrets.IMAGE_NAME }}:${{ github.run_number }} ./sourcecode

      - name: Push Docker image to ACR
        run: |
          docker push ${{ secrets.ACR_NAME }}.azurecr.io/${{ secrets.IMAGE_NAME }}:${{ github.run_number }}


      - name: Deploy Azure AKS
        uses: azure/arm-deploy@v1
        with:
          subscriptionId: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
          resourceGroupName: satha-pc
          template: ./AKS/template.json
          parameters: ./AKS/parameters.json
          deploymentName: akscreation
      
      - name: Get AKS credentials
        run: |
          az aks get-credentials --resource-group ${{ secrets.AZURE_RESOURCE_GROUP }} --name ${{ secrets.AKS_CLUSTER_NAME }} --overwrite-existing

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.x'

      - name: Set up Ansible
        run: |
          python -m pip install --upgrade pip
          pip install ansible


      - name: Install kubectl
        uses: azure/setup-kubectl@v1
        with:
          version: 'latest'

      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y sshpass

      - name: Run Ansible playbook
        run: ansible-playbook ./ansible/install_argocd.yaml
      
     


  Delete-Azure-AKS:
    if: ${{ github.event.inputs.action == 'Delete-Azure-AKS' || github.event.inputs.action == 'Both' }}
    runs-on: ubuntu-latest
    needs: Deploy-Azure-AKS
    environment: delete-approval
    steps:
      - name: Login to Azure
        uses: azure/login@v1
        with:
          creds: '{"clientId": "${{ secrets.AZURE_CLIENT_ID }}", "clientSecret": "${{ secrets.AZURE_CLIENT_SECRET }}", "subscriptionId": "${{ secrets.AZURE_SUBSCRIPTION_ID }}", "tenantId": "${{ secrets.AZURE_TENANT_ID }}"}'

      - name: Delete Deployed Resources
        run: |
          az resource delete --resource-group satha-pc --name satha-aks --resource-type Microsoft.ContainerService/ManagedClusters
          
