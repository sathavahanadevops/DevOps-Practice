name: Terraform Azure DiskCreation

on:
  workflow_dispatch:
    inputs:
      action:
        description: 'Action to perform (apply, destroy, or both)'
        required: true
        default: 'apply'
        type: choice
        options:
          - apply
          - destroy
          - both

jobs:
  terraform_apply:
    name: 'Terraform Apply'
    if: ${{ github.event.inputs.action == 'apply' || github.event.inputs.action == 'both' }}
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: HashiCorp - Setup Terraform
        uses: hashicorp/setup-terraform@v2.0.3
        with:
          terraform_version: default

      - name: Login to Azure
        uses: azure/login@v1
        with:
          creds: '{"clientId": "${{ secrets.AZURE_CLIENT_ID }}", "clientSecret": "${{ secrets.AZURE_CLIENT_SECRET }}", "subscriptionId": "${{ secrets.AZURE_SUBSCRIPTION_ID }}", "tenantId": "${{ secrets.AZURE_TENANT_ID }}"}'

  

      - name: Initialize Terraform with Backend Configuration
        run: terraform init -backend-config="resource_group_name=satha-pc" -backend-config="storage_account_name=terraformstatesathapc" -backend-config="container_name=terraformstate" -backend-config="key=terraform.tfstate" -backend-config="access_key=${{ secrets.STATEFILE_ACCESS_KEY }}"
        working-directory: ./terraform-diskcreation

      - name: Select Terraform workspace
        run: terraform workspace select default || terraform workspace new default
        working-directory: ./terraform-diskcreation

      - name: Terraform Plan Apply
        if: ${{ github.event.inputs.action == 'apply' || github.event.inputs.action == 'both' }}
        env:
          AZURE_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
          AZURE_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
          AZURE_CLIENT_SECRET: ${{ secrets.AZURE_CLIENT_SECRET }}
          AZURE_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}
        run: terraform plan -out=tfplan
        working-directory: ./terraform-diskcreation

      - name: Terraform Apply
        if: ${{ github.event.inputs.action == 'apply' || github.event.inputs.action == 'both' }}
        env:
          AZURE_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
          AZURE_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
          AZURE_CLIENT_SECRET: ${{ secrets.AZURE_CLIENT_SECRET }}
          AZURE_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}
        run: terraform apply -auto-approve tfplan
        working-directory: ./terraform-diskcreation

  terraform_destroy:
    name: 'Terraform Destroy'
    if: ${{ github.event.inputs.action == 'destroy' || github.event.inputs.action == 'both' }}
    runs-on: ubuntu-latest
    needs: terraform_apply
    environment: delete-approval

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: HashiCorp - Setup Terraform
        uses: hashicorp/setup-terraform@v2.0.3
        with:
          terraform_version: default

      - name: Login to Azure
        uses: azure/login@v1
        with:
          creds: '{"clientId": "${{ secrets.AZURE_CLIENT_ID }}", "clientSecret": "${{ secrets.AZURE_CLIENT_SECRET }}", "subscriptionId": "${{ secrets.AZURE_SUBSCRIPTION_ID }}", "tenantId": "${{ secrets.AZURE_TENANT_ID }}"}'



      - name: Initialize Terraform with Backend Configuration
        run: terraform init -backend-config="resource_group_name=satha-pc" -backend-config="storage_account_name=terraformstatesathapc" -backend-config="container_name=terraformstate" -backend-config="key=terraform.tfstate" -backend-config="access_key=${{ secrets.STATEFILE_ACCESS_KEY }}"
        working-directory: ./terraform-diskcreation

      - name: Select Terraform workspace
        run: terraform workspace select default || terraform workspace new default
        working-directory: ./terraform-diskcreation

      - name: Terraform Plan Destroy
        if: ${{ github.event.inputs.action == 'destroy' || github.event.inputs.action == 'both' }}
        env:
          AZURE_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
          AZURE_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
          AZURE_CLIENT_SECRET: ${{ secrets.AZURE_CLIENT_SECRET }}
          AZURE_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}
        run: terraform plan -destroy -out=tfplan
        working-directory: ./terraform-diskcreation

      - name: Terraform Destroy
        if: ${{ github.event.inputs.action == 'destroy' || github.event.inputs.action == 'both' }}
        env:
          AZURE_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
          AZURE_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
          AZURE_CLIENT_SECRET: ${{ secrets.AZURE_CLIENT_SECRET }}
          AZURE_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}
        run: terraform apply -destroy -auto-approve tfplan
        working-directory: ./terraform-diskcreation